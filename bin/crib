#!/usr/bin/env python

from subprocess import call
import os, argparse, getpass
from crib import crib

# ----------------------------------------
# Initialize parser

parser = argparse.ArgumentParser(description = 'crib is a minimal command line encryption tool')
parser.add_argument('-e', '--encrypt',
				help = 'Encrypts a file')
parser.add_argument('-d', '--decrypt',
				help = 'Decrypts a file')
parser.add_argument('-s', '--show',
				help = 'Opens a file for editing and / or viewing')

args = vars(parser.parse_args())

# -----------------------------------------
# Action handling

if args['encrypt']:
	# If encryption is to be done
	password = ""
	while True:
		print "Enter password for encryption"
		first_password = getpass.getpass()
		print "Confirm password"
		second_password = getpass.getpass()

		if first_password != second_password:
			print "Passwords dont match. Try again."
		else:
			print "Passwords match. Encrypting . . ."
			password = second_password
			break

	crib.encrypt(crib.keygen(password), args['encrypt'])
	os.remove(args['encrypt'])

	print "Encryption done"

elif args['decrypt']:
	# If decryption is to be done
	password = getpass.getpass()
	crib.decrypt(crib.keygen(password), args['decrypt'])
	os.remove(args['decrypt'])

elif args['show']:
	# If reading or editing the file is needed
	# It performs temporary decryption
	password = getpass.getpass()
	crib.decrypt(crib.keygen(password), args['show'])
	os.remove(args['show'])
	
	file_name = os.path.splitext(args['show'])[0]
	
	call(("nano", file_name))

	crib.encrypt(crib.keygen(password), file_name)
	os.remove(file_name)